{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD","App","useState","sortField","setSortField","sortReverse","setSortReverse","sortedGoods","goods","newGoods","reverse","sort","good1","good2","length","localeCompare","visibleGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EACL,eADKA,EAEH,SAgCH,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EAhCR,SAAsBC,EAAOL,EAAWE,GACtC,IAAMI,EAAQ,YAAOD,GAErB,OAAKL,GAAaE,EACTI,EAASC,WAGdP,GACFM,EAASE,MAAK,SAACC,EAAOC,GACpB,OAAQV,GACN,KAAKH,EACH,OAAQK,EACJQ,EAAMC,OAASF,EAAME,OACrBF,EAAME,OAASD,EAAMC,OAE3B,KAAKd,EACH,OAAQK,EACJQ,EAAME,cAAcH,GACpBA,EAAMG,cAAcF,GAE1B,QACE,OAAO,MAKRJ,GAMaO,CAAajB,EAAiBI,EAAWE,GAE7D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,WACPhB,EAAaJ,IARjB,iCAcA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,WACPhB,EAAaJ,IARjB,4BAcA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,WACPd,GAAgBD,IARpB,sBAcgB,KAAdF,GAAoBE,IACpB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAe,IALnB,sBAaJ,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCrHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4955d81.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const SORT_FIELD = {\n  ALPH: 'alphabetical',\n  LENGTH: 'length',\n};\n\nfunction visibleGoods(goods, sortField, sortReverse) {\n  const newGoods = [...goods];\n\n  if (!sortField && sortReverse) {\n    return newGoods.reverse();\n  }\n\n  if (sortField) {\n    newGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD.LENGTH:\n          return (sortReverse)\n            ? good2.length - good1.length\n            : good1.length - good2.length;\n\n        case SORT_FIELD.ALPH:\n          return (sortReverse)\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return newGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const sortedGoods = visibleGoods(goodsFromServer, sortField, sortReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD.ALPH },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD.ALPH);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD.LENGTH },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !sortReverse },\n          )}\n          onClick={() => {\n            setSortReverse(!sortReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}